"""test integer_validator method"""
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("tmp", -4)
Traceback (most recent call last):
...
ValueError: tmp must be greater than 0

>>> bg.integer_validator("tmp", None)
Traceback (most recent call last):
...
TypeError: tmp must be an integer

>>> bg.integer_validator("tmp")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("tmp", "hi")
Traceback (most recent call last):
...
TypeError: tmp must be an integer

>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

>>> bg.integer_validator("tmp", (4,))
Traceback (most recent call last):
...
TypeError: tmp must be an integer

>>> bg.integer_validator("tmp", [3])
Traceback (most recent call last):
...
TypeError: tmp must be an integer

>>> bg.integer_validator("tmp", True)
Traceback (most recent call last):
...
TypeError: tmp must be an integer

>>> bg.integer_validator("tmp", {3,4})
Traceback (most recent call last):
...
TypeError: tmp must be an integer
